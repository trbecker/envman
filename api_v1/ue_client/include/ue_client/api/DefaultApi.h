/**
 * UE Control API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DefaultApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_DefaultApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_DefaultApi_H_



#include "ue_client/ApiClient.h"

#include "ue_client/model/_UE__iMSI__handover_put_request.h"
#include "ue_client/model/_cell__gnb_id__power_put_request.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  DefaultApi 
{
public:

    explicit DefaultApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~DefaultApi();

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="gnbId"></param>
    /// <param name="cellGnbIdPowerPutRequest"></param>
    pplx::task<void> cellGnbIdPowerPut(
        int32_t gnbId,
        std::shared_ptr<_cell__gnb_id__power_put_request> cellGnbIdPowerPutRequest
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<void> testGet(
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="iMSI"></param>
    pplx::task<void> uEIMSIDisconnectPut(
        utility::string_t iMSI
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="iMSI"></param>
    /// <param name="uEIMSIHandoverPutRequest"></param>
    pplx::task<void> uEIMSIHandoverPut(
        utility::string_t iMSI,
        std::shared_ptr<_UE__iMSI__handover_put_request> uEIMSIHandoverPutRequest
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="iMSI"></param>
    pplx::task<void> uEIMSITestPut(
        utility::string_t iMSI
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_DefaultApi_H_ */

